const { model } = require('mongoose');

// Pagination middleware
require('dotenv').config();

function paginatedResults(model) {
    return async (req, res, next) => {
        const page = parseInt(req.query.page) || 1;
        const limit = parseInt(req.query.limit) || 20;
        console.log("PAGINATION TEST. PAGE: " + page + " LIMIT: " + limit)
        const startIndex = (page - 1) * limit;
        const endIndex = page * limit;

        const results = {};

        try {
            const modelResults = await model.find({}).sort({createdAt: -1})
            results.results = modelResults.slice(startIndex, endIndex);
            if (endIndex < modelResults.length) {
                results.next = {
                    page: page + 1,
                    limit: limit
                }
            }
            if (startIndex > 0) {
                results.previous = {
                    page: page - 1,
                    limit: limit
                }
            }
            // console.log(results)
            res.paginatedResults = results;
            next();
        } catch (error) {
            res.status(400).json({error: error.message})
        }
    }
}

// Export the middleware
module.exports = paginatedResults;